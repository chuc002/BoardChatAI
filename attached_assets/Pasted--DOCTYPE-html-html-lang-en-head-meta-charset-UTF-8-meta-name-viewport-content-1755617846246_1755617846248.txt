<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BoardContinuity - Institutional Memory AI</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .gradient-bg {
            background: linear-gradient(135deg, #1f4e79 0%, #2d5a87 50%, #1f4e79 100%);
        }
        
        .card-shadow {
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        .inner-shadow {
            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);
        }
        
        /* Enhanced typing animation */
        .typing-indicator {
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.3s ease;
            display: none;
        }
        
        .typing-indicator.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }
        
        .typing-dots {
            display: flex;
            align-items: center;
            gap: 4px;
        }
        
        .typing-dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: #3b82f6;
            animation: typing 1.4s infinite ease-in-out;
        }
        
        .typing-dot:nth-child(1) { animation-delay: 0s; }
        .typing-dot:nth-child(2) { animation-delay: 0.2s; }
        .typing-dot:nth-child(3) { animation-delay: 0.4s; }
        
        @keyframes typing {
            0%, 60%, 100% {
                transform: translateY(0);
                opacity: 0.4;
            }
            30% {
                transform: translateY(-10px);
                opacity: 1;
            }
        }
        
        /* Message animations */
        .message-enter {
            animation: messageSlideIn 0.3s ease-out;
        }
        
        @keyframes messageSlideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Enhanced brain icon */
        .brain-pulse {
            animation: brainPulse 2s infinite ease-in-out;
        }
        
        @keyframes brainPulse {
            0%, 100% { transform: scale(1); opacity: 0.9; }
            50% { transform: scale(1.05); opacity: 1; }
        }
        
        /* Hover effects for suggestion buttons */
        .suggestion-btn {
            transition: all 0.2s ease;
            border: 1px solid transparent;
        }
        
        .suggestion-btn:hover {
            background-color: #eff6ff;
            border-color: #3b82f6;
            transform: translateY(-1px);
        }
        
        /* Enhanced input styling */
        .input-enhanced {
            transition: all 0.2s ease;
        }
        
        .input-enhanced:focus {
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            border-color: #3b82f6;
        }
        
        /* Status indicators */
        .status-indicator {
            position: relative;
            overflow: hidden;
        }
        
        .status-indicator::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            animation: statusShimmer 2s infinite;
        }
        
        @keyframes statusShimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }
        
        /* Enhanced scrollbar */
        .custom-scrollbar::-webkit-scrollbar {
            width: 6px;
        }
        
        .custom-scrollbar::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 3px;
        }
        
        .custom-scrollbar::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }
        
        .custom-scrollbar::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Enhanced Header with subtle animation -->
    <div class="gradient-bg text-white py-6 relative overflow-hidden">
        <div class="absolute inset-0 bg-white opacity-5"></div>
        <div class="container mx-auto px-6 relative z-10">
            <div class="flex items-center gap-4">
                <div class="text-4xl brain-pulse">üß†</div>
                <div>
                    <h1 class="text-3xl font-bold tracking-tight">BoardContinuity</h1>
                    <p class="text-blue-100 mt-1 font-medium">30-Year Veteran Board Member ‚Ä¢ Perfect Institutional Memory</p>
                </div>
            </div>
        </div>
    </div>

    <div class="container mx-auto px-6 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
            <!-- Main Chat Interface -->
            <div class="lg:col-span-3">
                <div class="bg-white rounded-xl card-shadow p-6">
                    <div class="flex items-center gap-3 mb-6">
                        <div class="text-2xl">üí¨</div>
                        <h2 class="text-xl font-semibold text-gray-800">Ask Your Institutional Memory</h2>
                        <div class="ml-auto">
                            <button onclick="clearChat()" class="text-gray-400 hover:text-gray-600 transition-colors p-2 rounded-lg hover:bg-gray-100">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                            </button>
                        </div>
                    </div>
                    
                    <!-- Enhanced Chat Messages Area -->
                    <div id="chat-messages" class="h-96 overflow-y-auto mb-6 p-4 bg-gray-50 rounded-xl inner-shadow custom-scrollbar">
                        <!-- Welcome Message with Enhanced Styling -->
                        <div class="text-center py-12">
                            <div class="text-6xl mb-4 brain-pulse">üß†</div>
                            <h3 class="text-2xl font-bold text-gray-800 mb-2">Welcome to BoardContinuity</h3>
                            <p class="text-gray-600 mb-6 text-lg">I have perfect recall of your organization's entire history.</p>
                            
                            <!-- Enhanced Try Asking Section -->
                            <div class="max-w-md mx-auto">
                                <p class="text-gray-700 font-medium mb-4">Try asking:</p>
                                <div class="space-y-2">
                                    <button onclick="askPredefined('What are all our membership fees and transfer rules?')" 
                                            class="suggestion-btn w-full text-left p-3 text-sm bg-white rounded-lg shadow-sm hover:shadow-md">
                                        <span class="text-blue-600 font-medium">üí∞</span> "What are all our membership fees and transfer rules?"
                                    </button>
                                    <button onclick="askPredefined('Show me decision patterns for budget approvals')" 
                                            class="suggestion-btn w-full text-left p-3 text-sm bg-white rounded-lg shadow-sm hover:shadow-md">
                                        <span class="text-green-600 font-medium">üìä</span> "Show me decision patterns for budget approvals"
                                    </button>
                                    <button onclick="askPredefined('What are the unwritten rules about major decisions?')" 
                                            class="suggestion-btn w-full text-left p-3 text-sm bg-white rounded-lg shadow-sm hover:shadow-md">
                                        <span class="text-purple-600 font-medium">ü§ù</span> "What are the unwritten rules about major decisions?"
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Enhanced Typing Indicator -->
                    <div id="typing-indicator" class="typing-indicator mb-4">
                        <div class="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
                            <div class="text-lg">üß†</div>
                            <div class="flex flex-col">
                                <div class="flex items-center gap-2">
                                    <span class="text-blue-700 font-medium">BoardContinuity is analyzing institutional memory</span>
                                    <div class="typing-dots">
                                        <div class="typing-dot"></div>
                                        <div class="typing-dot"></div>
                                        <div class="typing-dot"></div>
                                    </div>
                                </div>
                                <div class="text-xs text-blue-600 mt-1">Searching through decades of governance decisions...</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Enhanced Input Area -->
                    <div class="flex gap-3">
                        <div class="flex-1 relative">
                            <input 
                                type="text" 
                                id="query-input" 
                                placeholder="Ask about any governance decision, policy, or precedent..."
                                class="input-enhanced w-full p-4 pr-12 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-700"
                                onkeypress="handleKeyPress(event)"
                            >
                            <div class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                                </svg>
                            </div>
                        </div>
                        <button 
                            onclick="sendQuery()" 
                            id="ask-button"
                            class="px-8 py-4 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-all duration-200 font-medium shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
                        >
                            <span class="flex items-center gap-2">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                </svg>
                                Ask
                            </span>
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Enhanced Sidebar -->
            <div class="space-y-6">
                <!-- System Status -->
                <div class="bg-white rounded-xl card-shadow p-6">
                    <h3 class="text-lg font-semibold mb-4 text-gray-800 flex items-center gap-2">
                        <span class="text-green-500">‚óè</span> System Status
                    </h3>
                    <div class="space-y-3">
                        <div class="status-indicator p-3 bg-green-50 rounded-lg border border-green-200">
                            <div class="flex items-center justify-between">
                                <span class="text-sm text-green-800 font-medium">Institutional Memory</span>
                                <span class="text-xs text-green-600">Active</span>
                            </div>
                            <div class="text-xs text-green-700 mt-1">15,847 decisions indexed</div>
                        </div>
                        <div class="p-3 bg-blue-50 rounded-lg border border-blue-200">
                            <div class="flex items-center justify-between">
                                <span class="text-sm text-blue-800 font-medium">Pattern Recognition</span>
                                <span class="text-xs text-blue-600">Ready</span>
                            </div>
                            <div class="text-xs text-blue-700 mt-1">347 governance patterns identified</div>
                        </div>
                        <div class="p-3 bg-purple-50 rounded-lg border border-purple-200">
                            <div class="flex items-center justify-between">
                                <span class="text-sm text-purple-800 font-medium">Risk Analysis</span>
                                <span class="text-xs text-purple-600">Monitoring</span>
                            </div>
                            <div class="text-xs text-purple-700 mt-1">Real-time governance insights</div>
                        </div>
                    </div>
                </div>
                
                <!-- Quick Insights -->
                <div class="bg-white rounded-xl card-shadow p-6">
                    <h3 class="text-lg font-semibold mb-4 text-gray-800 flex items-center gap-2">
                        <span class="text-2xl">üí°</span> Recent Insights
                    </h3>
                    <div class="space-y-3">
                        <div class="p-3 bg-yellow-50 rounded-lg border-l-4 border-yellow-400">
                            <p class="text-sm text-yellow-800 font-medium">Budget Pattern Alert</p>
                            <p class="text-xs text-yellow-700 mt-1">Capital projects typically exceed budget by 15% in Q4</p>
                        </div>
                        <div class="p-3 bg-blue-50 rounded-lg border-l-4 border-blue-400">
                            <p class="text-sm text-blue-800 font-medium">Governance Insight</p>
                            <p class="text-xs text-blue-700 mt-1">Member satisfaction highest when decisions include 2+ committee reviews</p>
                        </div>
                        <div class="p-3 bg-green-50 rounded-lg border-l-4 border-green-400">
                            <p class="text-sm text-green-800 font-medium">Historical Success</p>
                            <p class="text-xs text-green-700 mt-1">Spring renovations have 85% success rate vs 60% for fall projects</p>
                        </div>
                    </div>
                </div>
                
                <!-- Document Upload -->
                <div class="bg-white rounded-xl card-shadow p-6">
                    <h3 class="text-lg font-semibold mb-4 text-gray-800 flex items-center gap-2">
                        <span class="text-2xl">üìÑ</span> Document Intelligence
                    </h3>
                    <div class="border-2 border-dashed border-gray-300 rounded-xl p-6 text-center hover:border-blue-400 transition-colors">
                        <input type="file" id="file-upload" accept=".pdf" class="hidden" onchange="uploadDocument()">
                        <button onclick="document.getElementById('file-upload').click()" class="text-blue-600 hover:text-blue-800 transition-colors">
                            <div class="text-3xl mb-2">üìÑ</div>
                            <div class="font-medium">Upload Board Documents</div>
                            <div class="text-sm text-gray-500 mt-1">PDF files ‚Ä¢ Instant processing</div>
                        </button>
                    </div>
                    <div id="upload-status" class="mt-3 text-sm"></div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const ORG_ID = 'demo-org';
        
        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                sendQuery();
            }
        }
        
        function askPredefined(question) {
            document.getElementById('query-input').value = question;
            sendQuery();
        }
        
        function clearChat() {
            const messagesContainer = document.getElementById('chat-messages');
            messagesContainer.innerHTML = `
                <div class="text-center py-12">
                    <div class="text-6xl mb-4 brain-pulse">üß†</div>
                    <h3 class="text-2xl font-bold text-gray-800 mb-2">Welcome to BoardContinuity</h3>
                    <p class="text-gray-600 mb-6 text-lg">I have perfect recall of your organization's entire history.</p>
                    
                    <div class="max-w-md mx-auto">
                        <p class="text-gray-700 font-medium mb-4">Try asking:</p>
                        <div class="space-y-2">
                            <button onclick="askPredefined('What are all our membership fees and transfer rules?')" 
                                    class="suggestion-btn w-full text-left p-3 text-sm bg-white rounded-lg shadow-sm hover:shadow-md">
                                <span class="text-blue-600 font-medium">üí∞</span> "What are all our membership fees and transfer rules?"
                            </button>
                            <button onclick="askPredefined('Show me decision patterns for budget approvals')" 
                                    class="suggestion-btn w-full text-left p-3 text-sm bg-white rounded-lg shadow-sm hover:shadow-md">
                                <span class="text-green-600 font-medium">üìä</span> "Show me decision patterns for budget approvals"
                            </button>
                            <button onclick="askPredefined('What are the unwritten rules about major decisions?')" 
                                    class="suggestion-btn w-full text-left p-3 text-sm bg-white rounded-lg shadow-sm hover:shadow-md">
                                <span class="text-purple-600 font-medium">ü§ù</span> "What are the unwritten rules about major decisions?"
                            </button>
                        </div>
                    </div>
                </div>
            `;
        }
        
        async function sendQuery() {
            const input = document.getElementById('query-input');
            const query = input.value.trim();
            
            if (!query) return;
            
            // Clear input and show user message
            input.value = '';
            addMessage('user', query);
            
            // Show enhanced typing indicator
            const typingIndicator = document.getElementById('typing-indicator');
            typingIndicator.classList.add('active');
            
            // Disable ask button
            const askButton = document.getElementById('ask-button');
            askButton.disabled = true;
            askButton.innerHTML = `
                <span class="flex items-center gap-2">
                    <div class="typing-dots">
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                    </div>
                    Thinking...
                </span>
            `;
            
            try {
                const response = await fetch('/api/query', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        org_id: ORG_ID,
                        query: query
                    })
                });
                
                const data = await response.json();
                
                if (data.error) {
                    addMessage('assistant', `Error: ${data.error}`);
                } else {
                    addMessage('assistant', data.response, data.sources);
                    
                    if (data.performance) {
                        console.log(`Response time: ${data.performance.response_time_ms}ms`);
                    }
                }
                
            } catch (error) {
                addMessage('assistant', 'I apologize, but I encountered an error processing your question. Please try again.');
                console.error('Error:', error);
            } finally {
                // Hide typing indicator and restore button
                typingIndicator.classList.remove('active');
                askButton.disabled = false;
                askButton.innerHTML = `
                    <span class="flex items-center gap-2">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Ask
                    </span>
                `;
            }
        }
        
        function addMessage(sender, content, sources = null) {
            const messagesContainer = document.getElementById('chat-messages');
            
            const messageDiv = document.createElement('div');
            messageDiv.className = `message-enter mb-6 ${sender === 'user' ? 'text-right' : 'text-left'}`;
            
            const bubbleDiv = document.createElement('div');
            bubbleDiv.className = `inline-block max-w-4xl p-4 rounded-xl ${
                sender === 'user' 
                    ? 'bg-blue-600 text-white shadow-lg' 
                    : 'bg-white border border-gray-200 shadow-lg'
            }`;
            
            // Enhanced content formatting
            if (sender === 'assistant') {
                // Add AI avatar and name
                const headerDiv = document.createElement('div');
                headerDiv.className = 'flex items-center gap-2 mb-3 text-sm text-gray-600';
                headerDiv.innerHTML = `
                    <span class="text-lg">üß†</span>
                    <span class="font-medium">BoardContinuity AI</span>
                    <span class="text-xs bg-gray-100 px-2 py-1 rounded-full">30-Year Veteran</span>
                `;
                bubbleDiv.appendChild(headerDiv);
            }
            
            const contentDiv = document.createElement('div');
            contentDiv.className = sender === 'user' ? 'text-white' : 'text-gray-800';
            
            // Enhanced markdown-like formatting
            const formattedContent = content
                .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                .replace(/\n/g, '<br>')
                .replace(/(\d+\.)\s/g, '<br><strong>$1</strong> ')
                .replace(/‚Ä¢/g, '<span class="text-blue-500">‚Ä¢</span>');
            
            contentDiv.innerHTML = formattedContent;
            bubbleDiv.appendChild(contentDiv);
            
            messageDiv.appendChild(bubbleDiv);
            
            // Enhanced sources display
            if (sources && sources.length > 0) {
                const sourcesDiv = document.createElement('div');
                sourcesDiv.className = 'mt-3 text-xs';
                sourcesDiv.innerHTML = `
                    <div class="inline-flex items-center gap-2 bg-gray-100 px-3 py-2 rounded-lg">
                        <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                        <span class="text-gray-600 font-medium">Sources:</span>
                        <span class="text-gray-700">${sources.map(s => `${s.source} (p.${s.page})`).join(', ')}</span>
                    </div>
                `;
                messageDiv.appendChild(sourcesDiv);
            }
            
            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
        
        async function uploadDocument() {
            const fileInput = document.getElementById('file-upload');
            const file = fileInput.files[0];
            
            if (!file) return;
            
            const statusDiv = document.getElementById('upload-status');
            statusDiv.innerHTML = `
                <div class="flex items-center gap-2 text-blue-600">
                    <div class="typing-dots">
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                    </div>
                    <span>Processing document intelligence...</span>
                </div>
            `;
            
            const formData = new FormData();
            formData.append('file', file);
            formData.append('org_id', ORG_ID);
            
            try {
                const response = await fetch('/api/upload-document', {
                    method: 'POST',
                    body: formData
                });
                
                const data = await response.json();
                
                if (data.success) {
                    statusDiv.innerHTML = `
                        <div class="text-green-600">
                            <div class="flex items-center gap-2 font-medium">
                                <span>‚úÖ</span>
                                <span>Document processed successfully</span>
                            </div>
                            <div class="text-xs mt-1 bg-green-50 p-2 rounded">
                                ${data.chunks_created} sections ‚Ä¢ ${data.decisions_extracted} decisions ‚Ä¢ 
                                ${data.patterns_identified} patterns identified
                            </div>
                        </div>
                    `;
                } else {
                    statusDiv.innerHTML = `<div class="text-red-600 flex items-center gap-2"><span>‚ùå</span><span>${data.error}</span></div>`;
                }
                
            } catch (error) {
                statusDiv.innerHTML = '<div class="text-red-600 flex items-center gap-2"><span>‚ùå</span><span>Upload failed</span></div>';
                console.error('Upload error:', error);
            }
            
            fileInput.value = '';
        }
    </script>
</body>
</html>