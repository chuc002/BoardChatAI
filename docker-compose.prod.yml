version: '3.8'

services:
  boardcontinuity:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: boardcontinuity-app-prod
    environment:
      - FLASK_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE=${SUPABASE_SERVICE_ROLE}
      - DATABASE_URL=${DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - DEV_ORG_ID=${DEV_ORG_ID}
      - DEV_USER_ID=${DEV_USER_ID}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - boardcontinuity-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  nginx:
    image: nginx:alpine
    container_name: boardcontinuity-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
      - ./static:/var/www/static:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - boardcontinuity
    restart: unless-stopped
    networks:
      - boardcontinuity-network

  redis:
    image: redis:alpine
    container_name: boardcontinuity-redis-prod
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - boardcontinuity-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  watchtower:
    image: containrrr/watchtower
    container_name: boardcontinuity-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600 --cleanup
    restart: unless-stopped

networks:
  boardcontinuity-network:
    driver: bridge

volumes:
  redis-data:
    driver: local